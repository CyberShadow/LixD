Version history of the Lix D/Allegro 5 port
===========================================

0.2.1
-----

2016-01-25

Implemented ask-for-username menu when no name is given. This prevents having
no name set, and therefore being unable to save options.

Covered the empty space for the spawnint buttons with the info bar for now.

0.2.0
-----

2016-01-24

This is a test release, designed to try singleplayer. Don't replace your
existing installation of Lix with this D/A5 port yet. Keep it separate.

Minim has designed several scaled-up versions of the internal graphics.
They're visible whenever the game's resolution is at least 1.5 times as big
as the old 640x480. Many thanks to Minim for this work!

Levels and terrain graphics have been updated from C++ Lix.

I'm cross-compiling to Windows from Linux now. Let me know of any problems.

0.1.40
------

2016-01-23

Top-left corner of map shows the floating 'R' while replaying. The FPS are
shown on the panel right now, that's intended as a temporary solution only.

Lix target info in the panel shows (RCF) for runners/climbers/floaters, and
displays the number of bricks left for builders and platformers.

Replays cancel on LMB anywhere, and on activating the nuke.

Fix: With lixes returning equal priority, the closest one to the cursor is
preferred for an assignment. Previous bug: the farthest one was preferred.
Inverting priority doesn't invert this check, which is correct.

0.1.39
------

2016-01-22

Fix #32: With mouse speed different from 20, RMB-scrolling continued to
move even after the mouse has stopped moving, as long as RMB was kept down.

0.1.38
------

2016-01-22

The panel info bar uses the correctly recolored garden icons. They have the
correct shadow, according to the user's GUI color settings. (Even though, like
all GUI parts, they aren't recolored until the next program start.)

graphic.gralib has been refactored into a package for better readability.

0.1.37
------

2016-01-21

The replay browser can delete replays. It asks for confirmation with a message
box and moves the highlighting to the next replay.

During the game, the panel's info bar shows colored icons with numbers,
instead of the previously text-only lix counts.

0.1.36
------

2016-01-19

Faster drawing code, by holding bitmaps. Empty skills don't show their hotkey.
Fixed an assert fail on framestepping backwards across Phybit.needCol.

0.1.35
------

2016-01-18

Hatches marked as rotated in the level format spawn lemmings facing left.

0.1.34
------

2016-01-18

Replays are saved automatically on quitting a solved singleplayer level.
This still holds for exiting the game with Shift+Esc immediately.
No replay tree yet; replays are saved as manual/*.txt or solved/*.txt.

0.1.33
------

2016-01-18

Fix #12: Builders, platformers and cubers won't overwrite existing terrain.
Fix #22: Terrain removers don't draw over steel pixels.

Neither fix has affected physics. The remover visuals were particularly
urgent, because they made steel transparent, even though they didn't remove
the steel.

These fixes are implemented with iteration over the lookup map, then issuing
many copies of 1x1 rectangles to the graphics card. This is likely slower
than hardware shaders that examine the existing pixel. It's faster than
making lots of 1x1 sub-bitmaps on the heap, then destroying these again.

(Miner hits steel on my 9.5-year-old laptop: 30 ms for 1x1 sub-bitmaps, 7 ms
for 1x1 rectangles. Miner digging only through non-steel earth is much faster,
about 0.1 ms, and therefore uses the previously existing drawing code.)

The cuber sprite is transparent where it has been drawn to land already.
Now, the player can guess much better when which pixels are added.
I've added a few sparky lines to the cuber's last few frames.

I have removed the tumbler assert. See comment on issue #21:
https://github.com/SimonN/LixD/issues/21

0.1.32
------

2016-01-17

Fix #28: Empty skills are now re-selected if replenished after state loading.
Fix #29: Drawing explosions properly now.

I haven't tested implosions. They should be drawn behind the terrain anyway,
or get a completely new animation.

0.1.31
------

2016-01-16

Basher ignores top two rows of his 18 rows for steel.

Partial fix of #22: basher/miner cancels on hitting steel, but still takes
out some of the graphics. Physics are correct.

After class Game finishes, the correct browser is loaded, either singleplayer
or replay. Browsers exit on RMB. No option to auto-save singleplayer replays
that fail the level.

0.1.30
------

2016-01-15

Replay browser implemented. Loads replays, renders the correct level in the
preview. Program main loop calls game with the correct level and replay file,
the game plays back the correct replay. After viewing the replay, the program
goes back to the singleplayer browser, not to the replay browser.

Framestepping backwards is more performant over long distances, it omits
unnecessary intermediate savestates that would be discarded anyway. More ideas:
https://github.com/SimonN/LixD/issues/26

Slightly better text shadow positioning. Removed demo and benchmark code.

0.1.29
------

2016-01-12

Level preview renders and scales the level correctly, instead of displaying
only a colorful rectangle.

User savestating is implemented including saving/loading, but it doesn't
preserve effects, see issue #23.

Fixed bug #13: Framestepping buttons execute continuously on holding RMB.

0.1.28
------

Implemented the nuke.

Implemented replay arrows upon skill assignments, which are correctly
played back during framestepping and after restarting the level.

Explosions, flying pixels, and flying terrain remover equipment isn't in yet.

0.1.27
------

Miner implemented with geoo's anti-shock C++ code.

Flingers and trampolines are implemented.

0.1.26
------

2016-01-04

Singleplayer browser remembers the most recently played level.

Fixed bug #18: Assigning runner to a walker didn't make her run immediately.
Fixed bug #20: Assigning exploder to builder crashed the game due to
inability to return skills.

Fixed climber horizontal alignment with the wall, the alignment was set
correctly previously, but never reset correctly.

Exploder with flinging is now implemented similar to how it was in C++.
It should be checked for accuracy, once loading replays from disk is
implemented.

Fixed a crash on becoming tumbler. There is still an elusive assert fail
triggerable in the tumbler function. That should be debugged once replays
can be loaded from disk.

0.1.25
------

2016-01-03

Fixed bug #19: Tumbler selected only frames 2 or 3. Now, it selects its frame
by angle of flight now, while not advancing too far in any single frame.
https://github.com/SimonN/LixD/issues/19

0.1.24
------

2016-01-02

Fixed bug #10: Map drawing: Target area too large.
https://github.com/SimonN/LixD/issues/10

0.1.23
------

2016-01-01

Options menu complete. Some options don't do anything yet, but are loaded/saved
correctly nonetheless. Removed fullscreen resolution option. Switching users
works. Switching Language works.

I found the first bug of 2016 in the D compiler. ^_^

0.1.22
------

2015-12-31

Implemented GUI elements: Text entry, number picker, hotkey picker.
In the options menu, implemented 2/3 hotkey pages, and the graphics page.
Each hotkeyed button displays its hotkey in the bottom-right-hand corner.

Added 0.5f to the djvuM offset (the main font's vertical position), now
it looks great on 640x480, 800x600, 1280x1024, and 1400x1050.

0.1.21
------

2015-12-29

Implemented goals (exits), triggered traps, and dying outside of the level.
Implemented the Esc-during-level menu and the end-of-level menu. No browser
to save/view replays yet. Begun implementing the options menu.

0.1.17
------

2015-12-17

Bugfix: Blockers are now released upon walker assignment.

0.1.16
------

2015-12-16

All skills are implemented fully or mostly each, except for the miner,
which is missing completely still. Effects, like arrows, flying dig hammers,
and explosions, are missing.

Skills behave mostly identical to C++ Lix. Some extremely arcane behavioral
bugs were fixed while porting; report if things behave obviously strangely.
Probably also report if things behave differently.

Known differences: Exploder crater is 1 pixel smaller, diameter of 46 pixels
instead of 47 pixels, but should be completely symmetrical now. Blocker
doesn't get released on walker assignment; this fixed only in 0.1.17.

0.1.12
------

2015-11-30

Implemented builder and digger. The builder still draws on top of existing
land, which is merely a visual bug, not a physics bug. The digger makes
steel transparent, but the steel and terrain data inside the steel remains
present for physics; again only a visual bug.

0.1.5
-----

2015-11-19

Map detects mouse on the land properly, at least with zoom == 1. Priority
computation has been ported over. You can click lix and hear the assign
sound being played if the assignment were legal. Assignments aren't in yet.

0.1.4
-----

2015-11-15

Walker, Faller and Ascender are implemented and should perform like their
C++ versions. I would like to keep close to the C++ behavior for now.
Savestates have been implemented for framestepping. Skill assignments
are not possible yet.

0.1.2
-----

2015-10-30

Started implementing Lix skills. There will likely be no problem with them
scanning the terrain from the lookupmap. I'm anxious about them writing to
the terrain later on, when the more interesting skills get added.

0.1.0
-----

2015-08-24

First Windows build released on Lemmings Forums as a smoke test. It runs
well for most people. Drawing has bad performance still with about 3,500
animated gadgets, but is much better with about 200 than in the previous
months.

0.0.0
-----

2015-02-28

Started development by porting the fundamental Lix graphic classes from
Allegro 4.4 to Allegro 5 with the D Programming Language.
